--- javet-ref/cpp/CMakeLists.txt	2022-12-01 13:20:54.888196745 +0000
+++ javet/cpp/CMakeLists.txt	2022-12-01 18:46:45.951502958 +0000
 @@ -136,9 +136,7 @@ if(DEFINED NODE_DIR)
     endif()
     # zlib
     if(CMAKE_SYSTEM_NAME STREQUAL "Android")
-        if(CMAKE_ANDROID_ARCH STREQUAL "arm64")
+        if(CMAKE_ANDROID_ARCH MATCHES "(x86|x86_64)")
-            list(APPEND importLibraries zlib_adler32_simd zlib_arm_crc32)
-        elseif(CMAKE_ANDROID_ARCH MATCHES "(x86|x86_64)")
             list(APPEND importLibraries zlib_adler32_simd zlib_inflate_chunk_simd)
         endif()
     else()
@@ -258,9 +256,9 @@
         if(DEFINED NODE_DIR)
             list(APPEND includeDirs
-                ${NODE_DIR}/out.${CMAKE_ANDROID_ARCH}/Release/obj/gen/generate-bytecode-output-root
-                ${NODE_DIR}/out.${CMAKE_ANDROID_ARCH}/Release/obj/gen/inspector-generated-output-root
-                ${NODE_DIR}/out.${CMAKE_ANDROID_ARCH}/Release/obj/gen)
+                ${NODE_DIR}/out/Release/obj/gen/generate-bytecode-output-root
+                ${NODE_DIR}/out/Release/obj/gen/inspector-generated-output-root
+                ${NODE_DIR}/out/Release/obj/gen)
             foreach(importLibrary ${importLibraries})
-                set_target_properties(${importLibrary} PROPERTIES IMPORTED_LOCATION ${NODE_DIR}/out.${CMAKE_ANDROID_ARCH}/Release/lib${importLibrary}.a)
+                set_target_properties(${importLibrary} PROPERTIES IMPORTED_LOCATION ${NODE_DIR}/out/Release/lib${importLibrary}.a)
             endforeach(importLibrary)
             list(REMOVE_ITEM importLibraries v8_init)
--- javet-ref/cpp/jni/javet_native.h	2022-12-01 13:20:54.888196745 +0000
+++ javet/cpp/jni/javet_native.h	2022-12-01 18:46:45.951502958 +0000
@@ -21,6 +21,7 @@
 #include "javet_node.h"
 #include "javet_v8.h"
 
+
 #ifdef __ANDROID__
 #define SUPPORTED_JNI_VERSION JNI_VERSION_1_6
 #else
@@ -30,7 +31,7 @@
 #define FETCH_JNI_ENV(javaVMPointer) \
     JNIEnv* jniEnv; \
     javaVMPointer->GetEnv((void**)&jniEnv, SUPPORTED_JNI_VERSION); \
-    javaVMPointer->AttachCurrentThread((void**)&jniEnv, nullptr);
+    javaVMPointer->AttachCurrentThread(&jniEnv, nullptr);
 
 #define DELETE_LOCAL_REF(jniEnv, localRef) if (localRef != nullptr) { jniEnv->DeleteLocalRef(localRef); }
 
